Goals of this editor:
Be easy and enjoyable to use.
Feature completeness comes after ease of use.

2d view implementation will require some thought
maybe start with an orthographic view with GL_LINES

Large TODO
support vmt
support models
draw billboarded entity (light, soundscape etc)


TODO
use the deferred renderer so it looks real pretty
Decide on how editing will be handled

Rendering:
what is a good way to submit meshes?
some meshes need to be drawn multiple times: (gbuffer, shadow)
Figure out a upper bound on the number of draw calls you can make on the laptop
Maybe a vtable? so we can store an array of pointers to implementers of imesh
With comptime polymoporhs its harder to store generic state for later use

imesh_vtable:
    draw(camera)
    // Some way to indicate alpha
    // the drawctx should have this interface?

Models
How will models be drawn?
One drawcall per model-material part

Layout of a vtx file:
body parts:
    models:
        lods:
            meshes: 
                strip_groups:
                    index_array

sheesh


DRAWING the models we are moving.
poly component (transformable?)

common things
gizmo to translate and rotate
deletion
grouping?

Distinct objects
csg solids
models
misc entities

BRUSH EDITING.
once a brush is selected,
selected one of its faces, and put a gizmo on it.
is it really that simple?

Fast grab of faces, all solids are convex polyhedra, meaning a ray intersecting the solid will intersect exactly twice.
holding down a key will select exit face rather than enter

How do we do it?
