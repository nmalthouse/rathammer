Goals of this editor:
Be easy and enjoyable to use.
Feature completeness comes after ease of use.

2d view implementation will require some thought
maybe start with an orthographic view with GL_LINES

Large TODO
support vmt
support models
draw billboarded entity (light, soundscape etc)
how are editor entities defined per game? something about gameinfo.txt

Tools a layer above direct manipulation of solids.
Sketchup esque?

TODO
use the deferred renderer so it looks real pretty
Decide on how editing will be handled
port the cube editor thing from ratgraph and get basic recompute of meshes working.
Render the skybox !

Rendering:
what is a good way to submit meshes?
some meshes need to be drawn multiple times: (gbuffer, shadow)
Figure out a upper bound on the number of draw calls you can make on the laptop
Maybe a vtable? so we can store an array of pointers to implementers of imesh
With comptime polymoporhs its harder to store generic state for later use

imesh_vtable:
    draw(camera)
    // Some way to indicate alpha
    // the drawctx should have this interface?

Models
How will models be drawn?
One drawcall per model-material part

Layout of a vtx file:
body parts:
    models:
        lods:
            meshes: 
                strip_groups:
                    index_array

sheesh


we can either work on: 
model loading
3d editing.
2d editing.
drawing interface
gui kv's

