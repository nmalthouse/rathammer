name: ci

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-22.04
    #runs-on: ubuntu-latest

    steps: 
      - name: checkout
        uses: actions/checkout@v2
      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Setup Zig Compiler
      #You may pin to the exact commit or the version.
      # uses: mlugg/setup-zig@8d6198c65fb0feaa111df26e6b467fea8345e46f
        uses: mlugg/setup-zig@v2.0.5
        with:
          # Version of the Zig compiler, e.g. "0.13.0" or "0.13.0-dev.351+64ef45eb0". "master" uses the latest nightly build. "latest" uses the latest tagged release. Leave empty to use minimum_zig_version from build.zig.zon, with a fallback to "latest".
          version: "0.14.1"
          
      - name: build libs
        run:  bash ci/setup_linux.sh

      #- uses: libsdl-org/setup-sdl@main
      #  id: sdl
      #  with:
      #    install-linux-dependencies: true
      #    version: 3.2.16

      - name: build linux
        run: bash distrib/makeappdir.sh

      - name: build win
        run: bash distrib/makewin.sh

      - name: version
        run: echo "::set-output name=version::$(./zig-out/bin/rathammer --version)"
        id: version

      - name: upload linux
        uses: actions/upload-artifact@v4
        with:
          name: rathammer_linux_x86_x64-${{ steps.version.outputs.version }}
          path: distrib/appimagebuild

      - name: upload windows
        uses: actions/upload-artifact@v4
        with:
          name: rathammer_windows_x86_x64-${{ steps.version.outputs.version }}
          path: distrib/rathammer-windows

      #- name: release
      #  uses: actions/create-release@v1
      #  id: create_release
      #  with:
      #    draft: false
      #    prerelease: true
      #    release_name: ${{ steps.version.outputs.version }}
      #    tag_name: ${{ github.ref }}
      #    body_path: CHANGELOG.md
      #  env:
      #    GITHUB_TOKEN: ${{ github.token }}

      #- name: upload linux artifact
      #  uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ github.token }}
      #  with:
      #    upload_url: ${{ steps.create_release.outputs.upload_url }}
      #    asset_path: ./distrib/rathammer_linux_x86_64.zip
      #    asset_name: rathammer_linux-${{ steps.version.outputs.version }}.zip
      #    asset_content_type: application/zip

      #- name: upload windows artifact
      #  uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ github.token }}
      #  with:
      #    upload_url: ${{ steps.create_release.outputs.upload_url }}
      #    asset_path: ./distrib/rathammer_windows.zip
      #    asset_name: rathammer_windows-${{ steps.version.outputs.version }}.zip
      #    asset_content_type: application/zip


      
